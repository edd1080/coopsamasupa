#!/usr/bin/env node

/**
 * Script de validaci√≥n para probar la correcci√≥n del bug de validaci√≥n de DPI
 * BUG-225: Validaci√≥n de municipios por departamento
 * 
 * Problema: DPI 1234567891111 era aceptado cuando municipio 11 no existe en departamento 11
 * Soluci√≥n: Validar que el municipio espec√≠fico exista en el departamento espec√≠fico
 */

console.log('üß™ Testing DPI Municipality Validation Fix');
console.log('==========================================\n');

// Simulaci√≥n de la funci√≥n de validaci√≥n corregida
function validateDPI(dpi) {
  // Remover espacios, guiones y otros caracteres no num√©ricos
  const cleanDPI = dpi.replace(/[^\d]/g, '');
  
  // Verificar que tenga exactamente 13 d√≠gitos
  if (!/^\d{13}$/.test(cleanDPI)) {
    return {
      isValid: false,
      error: 'El DPI debe tener exactamente 13 d√≠gitos num√©ricos'
    };
  }

  // Validar formato espec√≠fico guatemalteco: 8 d√≠gitos + 1 verificador + 2 departamento + 2 municipio
  const baseNumber = cleanDPI.slice(0, 8);
  const checkDigit = parseInt(cleanDPI.slice(8, 9));
  const departmentCode = cleanDPI.slice(9, 11);
  const municipalityCode = cleanDPI.slice(11, 13);

  // Validar que departamento est√© en rango v√°lido (01-22)
  const deptNum = parseInt(departmentCode);
  if (deptNum < 1 || deptNum > 22) {
    return {
      isValid: false,
      error: 'C√≥digo de departamento inv√°lido (debe estar entre 01-22)'
    };
  }

  // Validar que municipio est√© en rango v√°lido (01-99)
  const munNum = parseInt(municipalityCode);
  if (munNum < 1 || munNum > 99) {
    return {
      isValid: false,
      error: 'C√≥digo de municipio inv√°lido (debe estar entre 01-99)'
    };
  }

  // NUEVA VALIDACI√ìN: Verificar que el municipio espec√≠fico exista en el departamento espec√≠fico
  const municipalityExists = municipalities.some(municipality => 
    municipality.departmentId === departmentCode && 
    municipality.id === municipalityCode
  );

  if (!municipalityExists) {
    return {
      isValid: false,
      error: `El municipio ${municipalityCode} no existe en el departamento ${departmentCode}. Verifique los c√≥digos de ubicaci√≥n`
    };
  }

  // Algoritmo de verificaci√≥n de d√≠gito verificador
  let sum = 0;
  for (let i = 0; i < 8; i++) {
    sum += parseInt(baseNumber[i]) * (i + 2);
  }
  
  const expectedCheckDigit = sum % 11;
  const finalCheckDigit = expectedCheckDigit === 10 ? 0 : expectedCheckDigit;
  
  if (checkDigit !== finalCheckDigit) {
    return {
      isValid: false,
      error: 'D√≠gito verificador incorrecto. Verifique que el DPI est√© bien digitado'
    };
  }

  return {
    isValid: true
  };
}

// Cat√°logo de municipios (simplificado para el test)
const municipalities = [
  // Departamento 11 - RETALHULEU
  { id: "01", departmentId: "11", value: "RETALHULEU" },
  { id: "02", departmentId: "11", value: "SAN SEBASTIAN" },
  { id: "03", departmentId: "11", value: "SANTA CRUZ MULUA" },
  { id: "04", departmentId: "11", value: "SAN MARTIN ZAPOTITLAN" },
  { id: "05", departmentId: "11", value: "SAN FELIPE" },
  { id: "06", departmentId: "11", value: "SAN ANDRES VILLA SECA" },
  { id: "07", departmentId: "11", value: "CHAMPERICO" },
  { id: "08", departmentId: "11", value: "NUEVO SAN CARLOS" },
  { id: "09", departmentId: "11", value: "EL ASINTAL" },
  
  // Departamento 01 - GUATEMALA (algunos ejemplos)
  { id: "01", departmentId: "01", value: "GUATEMALA" },
  { id: "02", departmentId: "01", value: "SANTA CATARINA PINULA" },
  { id: "11", departmentId: "01", value: "SAN RAYMUNDO" },
];

// Casos de prueba
const testCases = [
  {
    name: '‚ùå BUG REPORTADO: Municipio 11 en departamento 11 (INV√ÅLIDO)',
    dpi: '1234567891111',
    expected: false,
    description: 'Municipio 11 no existe en departamento 11 (Retalhuleu)'
  },
  {
    name: '‚úÖ V√ÅLIDO: Municipio 01 en departamento 11',
    dpi: '1234567891101',
    expected: true,
    description: 'Municipio 01 (Retalhuleu) existe en departamento 11'
  },
  {
    name: '‚úÖ V√ÅLIDO: Municipio 09 en departamento 11',
    dpi: '1234567891109',
    expected: true,
    description: 'Municipio 09 (El Asintal) existe en departamento 11'
  },
  {
    name: '‚ùå INV√ÅLIDO: Municipio 10 en departamento 11',
    dpi: '1234567891110',
    expected: false,
    description: 'Municipio 10 no existe en departamento 11'
  },
  {
    name: '‚úÖ V√ÅLIDO: Municipio 11 en departamento 01',
    dpi: '1234567890111',
    expected: true,
    description: 'Municipio 11 (San Raymundo) existe en departamento 01'
  },
  {
    name: '‚ùå INV√ÅLIDO: Departamento inv√°lido',
    dpi: '1234567892311',
    expected: false,
    description: 'Departamento 23 no existe (m√°ximo 22)'
  },
  {
    name: '‚ùå INV√ÅLIDO: Formato incorrecto',
    dpi: '123456789111',
    expected: false,
    description: 'DPI debe tener exactamente 13 d√≠gitos'
  }
];

// Ejecutar pruebas
let passedTests = 0;
let totalTests = testCases.length;

console.log('üîç Ejecutando casos de prueba:\n');

testCases.forEach((testCase, index) => {
  console.log(`${index + 1}. ${testCase.name}`);
  console.log(`   DPI: ${testCase.dpi}`);
  console.log(`   Descripci√≥n: ${testCase.description}`);
  
  const result = validateDPI(testCase.dpi);
  const passed = result.isValid === testCase.expected;
  
  if (passed) {
    console.log(`   ‚úÖ PAS√ì - Resultado: ${result.isValid ? 'V√ÅLIDO' : 'INV√ÅLIDO'}`);
    if (!result.isValid && result.error) {
      console.log(`   üìù Error: ${result.error}`);
    }
    passedTests++;
  } else {
    console.log(`   ‚ùå FALL√ì - Esperado: ${testCase.expected ? 'V√ÅLIDO' : 'INV√ÅLIDO'}, Obtenido: ${result.isValid ? 'V√ÅLIDO' : 'INV√ÅLIDO'}`);
    if (result.error) {
      console.log(`   üìù Error: ${result.error}`);
    }
  }
  
  console.log('');
});

// Resumen de resultados
console.log('üìä RESUMEN DE RESULTADOS');
console.log('========================');
console.log(`‚úÖ Pruebas pasadas: ${passedTests}/${totalTests}`);
console.log(`‚ùå Pruebas fallidas: ${totalTests - passedTests}/${totalTests}`);
console.log(`üìà Porcentaje de √©xito: ${Math.round((passedTests / totalTests) * 100)}%`);

if (passedTests === totalTests) {
  console.log('\nüéâ ¬°TODAS LAS PRUEBAS PASARON!');
  console.log('‚úÖ La correcci√≥n del bug de validaci√≥n de DPI est√° funcionando correctamente');
  console.log('‚úÖ Los municipios ahora se validan correctamente por departamento');
} else {
  console.log('\n‚ö†Ô∏è  ALGUNAS PRUEBAS FALLARON');
  console.log('‚ùå Revisar la implementaci√≥n de la validaci√≥n');
}

console.log('\nüîß CORRECCI√ìN IMPLEMENTADA:');
console.log('- Validaci√≥n de municipios espec√≠ficos por departamento');
console.log('- Uso del cat√°logo oficial de municipios de Guatemala');
console.log('- Mensajes de error m√°s espec√≠ficos y √∫tiles');
console.log('- Mantenimiento de todas las validaciones existentes');

console.log('\nüìù BUG RESUELTO:');
console.log('- DPI 1234567891111 ahora es correctamente rechazado');
console.log('- Municipio 11 no existe en departamento 11 (Retalhuleu)');
console.log('- Validaci√≥n m√°s precisa y confiable');
